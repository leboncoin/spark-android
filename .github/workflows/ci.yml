name: 🏭 CI

on:
  push:
    branches: [ "main", "hotfix/*", "chore-updated-icons" ]
  pull_request:
    branches: [ "main", "hotfix/*", "chore-updated-icons" ]
  merge_group:
    types: [ checks_requested ]
    branches: [ "main", "hotfix/*", "chore-updated-icons" ]

concurrency:
  group: '${{ github.workflow }}-${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

permissions:
  security-events: write
  pull-requests: write

jobs:

  validation:
    name: 🛃 Validation
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/check-git-lfs
      - uses: ./.github/actions/setup-java
      - uses: ./.github/actions/setup-gradle

  checks:
    name: 👮 Checks
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-java
      - uses: ./.github/actions/setup-gradle
      - uses: ./.github/actions/setup-gradle-properties
      - run: ./gradlew dependencyGuard --quiet
      - run: ./gradlew spotlessCheck :build-logic:spotlessCheck

  build:
    name: 👷 Build
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-java
      - uses: ./.github/actions/setup-gradle
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - uses: ./.github/actions/setup-gradle-properties
      - name: 👷 Build
        id: build
        run: ./gradlew assembleRelease
      - name: 📦 Archive APKs
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: '**/build/outputs/apk/**/*.apk'
      - name: 📦 Archive AARs
        uses: actions/upload-artifact@v4
        with:
          name: aar
          path: '**/build/outputs/aar'
      - name: 📢 Diffuse reports
        if: ${{ always() && github.event_name == 'pull_request' && steps.build.outcome == 'success' }}
        uses: ./.github/actions/diffuse-aar

  test:
    name: 🧑‍🔬 Test
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
        with:
          lfs: true
      - uses: ./.github/actions/setup-java
      - uses: ./.github/actions/setup-gradle
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - uses: ./.github/actions/setup-gradle-properties
      - name: 🧑‍🔬 Test
        id: test
        run: ./gradlew globalCiUnitTest verifyPaparazziRelease
      - name: 📦 Archive JUnit reports
        if: ${{ always() && contains(fromJSON('["success", "failure"]'), steps.test.outcome) }}
        uses: ./.github/actions/archive-junit-reports
        with:
          html: '**/build/reports/tests/test*'
          xml: '**/build/test-results/test*/**.xml'
      - name: 📦 Archive Paparazzi reports
        if: ${{ always() && contains(fromJSON('["success", "failure"]'), steps.test.outcome) }}
        uses: ./.github/actions/archive-paparazzi-reports
      - name: 📢 Paparazzi report
        if: ${{ failure() && steps.test.outcome == 'failure' && github.event_name == 'pull_request'}}
        uses: ./.github/actions/paparazzi-report
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pr-number: ${{ github.event.pull_request.number }}

  lint:
    name: 🕵️ Lint
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-java
      - uses: ./.github/actions/setup-gradle
        with:
          cache-encryption-key: ${{ secrets.GRADLE_ENCRYPTION_KEY }}
      - uses: ./.github/actions/setup-gradle-properties
      - name: 🕵️ Lint
        id: lint
        run: ./gradlew :spark:lintRelease :spark-screenshot-testing:lintRelease :catalog:lintRelease --continue
      - name: 📦 Archive Lint reports
        if: ${{ always() && contains(fromJSON('["success", "failure"]'), steps.lint.outcome) }}
        uses: ./.github/actions/archive-lint-reports
        with:
          html: '**/build/reports/lint-results-*.html'
          sarif: '**/build/reports/lint-results-*.sarif'
          xml: '**/build/reports/lint-results-*.xml'

      - name: Analyze SARIF report for spark module
        if: ${{ always() && hashFiles('spark/**/*.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: ./spark/
          category: spark

      - name: Analyze SARIF report for spark-screenshot-testing module
        if: ${{ always() && hashFiles('spark-screenshot-testing/**/*.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: ./spark-screenshot-testing/
          category: spark-screenshot-testing

      - name: Analyze SARIF report for catalog module
        if: ${{ always() && hashFiles('catalog/**/*.sarif') != '' }}
        uses: github/codeql-action/upload-sarif@v4
        with:
          sarif_file: ./catalog/
          category: catalog

  dokka:
    name: 📋 Dokka
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-java
      - uses: ./.github/actions/setup-gradle
      - uses: ./.github/actions/setup-gradle-properties

      - name: 📋 Build Dokka
        # https://github.com/Kotlin/dokka/issues/1217
        run: ./gradlew dokkaHtmlMultiModule --no-configuration-cache --no-parallel --max-workers=1
      - name: 📦 Archive Dokka
        uses: actions/upload-artifact@v4
        with:
          name: dokka
          path: build/dokka

  lava-scan:
    name: 🌋 Lava Scan
    needs: validation
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v5
      - name: 🌋 Run Lava Vulnerability Scanner
        uses: adevinta/lava-action@ddeeddd8ccf45b403741359471a5627644a0c5f6 # v0.3.4
        with:
          version: latest
          config: lava.yaml
      - uses: actions/upload-artifact@v4
        with:
          name: lava-metrics.json
          path: metrics.json

  finish:
    name: 🏁 Finish
    if: ${{ !cancelled() }} # Skipped jobs are considered successful
    needs:
      - validation
      - checks
      - build
      - test
      - lint
      - dokka
    runs-on: ubuntu-latest
    steps:
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        name: Fail
        run: exit 1
